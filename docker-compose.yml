services:
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: api 
    env_file: ".env"
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`todo.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true

    networks:
      - webgateway
    ports: 
      - 80
    volumes:
      - ./api/src:/src
    depends_on:
      - mongo
  app:
    build:
      context: ./app
      dockerfile: ./Dockerfile 
    env_file: ".env"
    ports: 
      - 80
    container_name: app
    command: "npm run dev"
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`todo.${DOMAIN}`)
      - traefik.http.routers.app.entrypoints=websecure
      - traefik.http.routers.app.tls=true

    networks:
      - webgateway
    volumes:
      - ./app:/app
  mongo:
    image: mongo
    container_name: mongo
    env_file: ".env"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_ROOT_PASS}
      MONGODB_DB: ${DATABASE_DB}
      MONGODB_USER: ${DATABASE_USER}
      MONGODB_PASS: ${DATABASE_PASS}
      MONGO_INITDB_DATABASE: ${DATABASE_ROOT_DATABASE}
    ports:
      - ${DATABASE_PORT}
    networks:
      - webgateway
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - ./data/db:/data/db
      - ./data/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    env_file: ".env"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_ROOT_PASS}
      ME_CONFIG_MONGODB_URL: ${MONGO_EXPRESS_URI}
    ports:
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.mongo-express.rule=Host(`dbadmin.${DOMAIN}`)
      - traefik.http.routers.mongo-express.entrypoints=websecure
      - traefik.http.routers.mongo-express.tls=true

    networks:
      - webgateway 
    depends_on:
      - mongo
  
  
networks:
  webgateway:
    name: ${NETWORK}
    external: true
