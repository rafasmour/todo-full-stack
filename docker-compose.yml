
version: '3.1'


services:
  
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: api 
    env_file: ".env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`todo.${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=${API_PORT}"
      - "traefik.http.routers.api.entrypoints=web"
      - "--providers.docker.network=webgateway"
    networks:
      - webgateway
    ports: 
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./api/src:/src
    depends_on:
      - mongo
      - traefik
  app:
    build:
      context: ./app
      dockerfile: ./Dockerfile 
    env_file: ".env"
    ports: 
      - ${APP_PORT}:${APP_PORT}
    container_name: app
    command: "npm run dev"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app=true"
      - "traefik.http.routers.app.rule=Host(`todo.${DOMAIN}`)"
      - "traefik.http.services.app.loadbalancer.server.port=${APP_PORT}"
      - "traefik.http.routers.app.entrypoints=web"
      - "--providers.docker.network=webgateway"
    networks:
      - webgateway
    volumes:
      - ./app:/app
  mongo:
    image: mongo
    container_name: mongo
    env_file: ".env"
    volumes:
      - ./data:/data
      - ./data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    networks:
      - webgateway
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    env_file: ".env"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASS}
      ME_CONFIG_MONGODB_URL: ${DATABASE_URI}
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.rule=Host(`dbadmin.${DOMAIN}`)"
      - "traefik.http.routers.mongo-express.entrypoints=web"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=${MONGO_EXPRESS_PORT}"
      - "--providers.docker.network=webgateway"
    networks:
      - webgateway 
    depends_on:
      - mongo
      - traefik
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    restart: always
    env_file: ".env"
    command:
      #- "--log.level=DEBUG"
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:${TRAEFIK_PORT_HTTP}"
      - "--entrypoints.websecure.address=:${TRAEFIK_PORT_HTTPS}"
      - "--api.dashboard=true"
      - "--providers.docker.network=webgateway"
    ports:
      - "${TRAEFIK_PORT_HTTP}:${TRAEFIK_PORT_HTTP}"
      - "${TRAEFIK_PORT_HTTPS}:${TRAEFIK_PORT_HTTPS}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
    networks:
      - webgateway

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - webgateway
    depends_on:
      - traefik
  
networks:
  webgateway:
    external: true